
day1：	
	一、流式布局
	
		1，不要给宽度固定值，宽度一般为百分比。
	
		2，屏幕的分辨率变化时，页面里的元素宽度会变化但布局和高度不会变。
	
	
	补充、
	
		1，像素密度：DPI是印刷行业中用来表示打印机每英寸可以喷的墨汁点数，计算机显示设备借鉴了DPI的概念，计算机显示的最小单位是像素，所以用PPI来表示每英寸的像素点数，所以我们把DPI和PPI都称为像素密度。

		2，设备独立像素：可以保证图像内容在不同的PPI设备上看上去差不多。1dp=1px，在不同的设备上1dp可能等于2像素，或者3像素。所有可以获取设备的独立像素，在不同的设备上显示不同的图片。他的缺点或造成图片被拉大造成图片精度丢失。
	
		3，物理像素：就是在屏幕的每一个发光点他不会变小变大，其实就是屏幕的分辨率。所有一个物理像素并不总是等于一个css像素（逻辑像素）
			
	

	二、移动端的现状
	
		1，在移动设备上viewport不再受限制在浏览器的窗口，而是允许开发人员自由的设置viewport的大小
		
		2，iPhone手机分辨率：640x960, 640x1136, 750x1334, 1242x2208等。 	
	
		3，Android手机：480x800, 480x854, 540x960, 720x1280，1080x1920等。	

		4，移动端的内核分为webkit内核
	
	
	三、移动web调试
	
		1，模拟调试：按下F12键，选择手机模式。但是模拟调试任然会存在问题。
		
		2，真机调试：搭建本地服务器，手机和电脑在一个局域网内，通过手机访问我们自己搭建的服务器。
	
	
	四、viewport视口
	
		1，layout viewport（布局视口）：进行设置网页布局区域的大小，同样是以css做为计量单位。他直接获取的是浏览器的宽和高
	
		2，ideal（爱掉哦） viewport（理想视口）：（以设备独立像素pt、dp作为单位）以css时像素作为计量单位，其大小是不可能改变的。因为直接获取的是屏幕设备的宽和高。
	
		3，视口设置：<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
		
			（1）width=device（第外斯）-width：视口的宽等于设备的宽
			
			（2）user-scalable（斯开哦的包）=no：禁止用户缩放，值为yes可以缩放
	
			（3）initial（音你少）-scale（斯该哦）=1.0：初始化禁止缩放
	
			（4）maximum（慢可斯们）-scale=1.0：禁止最大初始化缩放
			
			（5）minimum-scale=1.0：禁止最小初始化缩放

	五、2倍图
	
		1，因为我们的图片在不同的设备上展示，在设备大的屏幕上显示的就不清楚，所以需要提高图片的倍数来提高清晰度，而设备小的也可以看的清晰。

		2，需要多张倍数的图片然后通过获取设备的倍数，来做出相应的显示几倍的图片。
	
	
	六、性能更好的俩种图片格式：
	
		1，dpg：京东自主研发推出DPG图片压缩技术，经测试该技术，可直接节省用户近50%的浏览流量，极大的提升了用户的网页打开速度。全部浏览器的兼容支持，压缩后的图片和webp的清晰度对比没有差距。

		2，webp：谷歌开发的一种只在加快图片加载速度的图片格式。图片压缩体积大约只有JPEG的2/3，并能节省大量的服务器宽带资源和数据空间；
	
	
	七、二倍精灵图的使用方法

	
		1，设置图片原本的大小，然后通过设置背景图片的大小，设置二倍图的宽和高的一半即可。
	




day2
	
	一、flex布局（伸缩布局、弹性布局、伸缩盒布局）：操作方便布局及其简单，常用于移动端开发因为在pc端的兼容性不好。
	
	二、当为盒子设置了flex布局之后，元素的float和clear和快级元素和行内块等元素将不会再有这个感念。
	
	三、常用属性：

		
		在父元素上设置的属性：


			（1）display: flex;当给父元素设置了这个属性之后，容器就变成了弹性容器。
	
			（2）flex-direction:;确认主轴方向。值有（row）从左到右默认值，（row-reverse）从右到左（column（靠门））从上到下（column-reverse）从下到上。
	
			（3）flex-wrap（软铺）:;控制子元素换行。值为（wrap）换行，值为（nowrap）不换行。
	
			（4）flex-flow:;设置主轴和换行的合写。一般很少用。
	
			（5）justify-content:;控制主轴上元素的排列方式，类似word里的左对齐，右对齐，居中对齐，分散对齐。值为（flex-start）默认值从头部开始，值为（flex-end）从尾部开始排列，值为（center）在主轴居中对齐，值为（space（斯被斯）-around（啊ruang的））平分剩余的空间，值为（space-between（比退音））先俩边贴边，在平分剩余的空间。
		
			（6）align-content:;控制子元素在侧轴上的排列方式，并且只能用于子项出现换行的情况（多行）。值为（flex-start）默认从侧轴的头部开始，值为（flex-end）从侧轴的尾部开始，值为（center）在侧轴中间显示，值为（space-around）在侧轴平分剩余空间，值为（space-between）在侧轴先分布在俩头，再平分剩余的空间，值为（stretch）子元素高度平分父元素的高度，前提是子元素没有设置高度。
	
			（7）align-items:;控制元素在侧轴上的排列方式，在子元素为单行的时候用。值为（flex-start）默认值从上到下，值为（flex-end）从下到上，值为（center）挤在一起居中（垂直居中），值为（stretch（斯拽吃））自动拉伸元素，前提是元素没有设置高度。


		在子元素上设置的属性：

	
			（8）flex:;给子项划分父元素的空间，可以是百分比，可以是划分父元素的几份。
	
			（9）align-self:;控制子项自己在侧轴上的排列方式。值为（flex-start）默认值从上到下，值为（flex-end）从下到上，值为（center）挤在一起居中（垂直居中），值为（stretch）自动拉伸元素，前提是元素没有设置高度。
	
			（10 order:;可以让元素排到最前面去显示默认值为0，可以设置负数。
		

	
day3
	
	一、多媒体查询
	
		1，通过@media关键字媒体查询开头。（screen）查当前屏幕（all）用于所有设备（print）用于打印机和打印浏览，（and）并且，（not排除某个媒体类型）通过设置不同的设备的width，显示不同的样式。
		
			@media（美掉） screen（斯过瑞音） and (min-width:500px) {
				
				html{
					font-size: 20px;
					background: red;
				}
			}
		
		
		2，多媒体方法外联使用方法

			<link href="./5-1.css" media="only screen and (max-width: 320px)">

	
	二、rem布局
	
		1，全局的唯一控制，元素得使用rem单位，1rem=字体大小。
		
		2，先使用原来的width height像素做出来，最后把像素单位转成rem单位即可，但是需要到插件中设置转换的机制，以每rem等于多少像素转换。列如width为750px转换为就是1rem=75px。
	
		2，使用媒体查询来设置html的字体大小，当前设备的宽除以10，就是字体的大小。使用rem做为所有元素的尺寸单位，结果就是不同屏幕下的font-size不同，页面中元素的尺寸也不同。
	
		3，通过引用flexible（发栏可斯报）.js可以达到万能适配，我们直接把元素转成rem单位就行，js文件会帮助我们适配各种屏幕。
	
		4，使用快捷键alt+z键可以把所有的px单位转成rem单位，但需要安装一个插件

	
	三、less语法
	
		1，是css的扩展语言，也是需要一个代码编辑器的插件，这个插件会自动的帮助我们把less文件编译成css文件
		
		2，less里面的注释和css的注释不同，在less里面可以使用嵌套的写法，也可以定义变量@color:blue;定义的变量可以在任何元素上调用
      			
	

			.banner {
  				height: 44px;
  				border-bottom: 1px solid #ccc;
  				a {
    					display: block;

    					img {
      						width: 100%;
    					}
    				}
			}

day4

	响应式布局：重点在于屏幕的三端适配（手机，平板，电脑）

	bootstrap（波斯踹铺）框架：就是一个css框架，里面定义了很多的css样式。
	
		（1）栅格系统：在每个档位下，控制子元素的布局不同，将版心的宽度分为12份。他们都需要放到container容器里面。

		（2）屏幕档次的划分：
			
			1，大屏：lg（large）

			2，中屏：md（medium）

			3，小屏：sm（small）

			4，超小屏：xs（extra small）
		
		（3）在容器里面加入row（行）容器将要写的内容放到row里面可以去除父元素默认的左右15像素的padding值，但他自己左右为15px的margin值


		（4）屏幕档次的可见与不可见：
		
			（1）visible-xs：在超小屏幕下可见

			（2）visible-sm：在小屏下可见
		
			（3）visible-md：在中等屏幕下可见
	
			（4）visible-lg：在大屏下可见




			（1）hidden-xs：在超小屏幕下不可见

			（2）hidden-sm：在小屏下不可见
		
			（3）hidden-md：在中等屏幕下不可见
	
			（4）hidden-lg：在大屏下不可见


day5

	三维坐标系：
	
		1，3D空间的基础知识：在2D的基础上增加了一条Z轴，Z轴是指向我们眼睛的方向。
	
		2，属性：
		
			（1）transform：translate3d（x，y，z）；合写。Z轴设置百分比无效，只能设置像素单位。
			
			（2）transform：translateX（）；
	
			（3）transform：translateY（）；

			（4）transform：translateZ（）；

		3，视距：perspective：单位px；开启立体空间的第一步，设置与被观测物体的距离，有距离才会有近大远小的效果。他是给父元素设置的属性。
	
		4，3D旋转：transform: rotate3d(x，y，z);
			
			（1）transform: rotateX();

			（2）transform: rotateY();

			（3）transform: rotateZ();
		
		5，3D呈现：
		
			（1）transform-style：preserve-3d；只要子元素做3d转换，就需要在父元素上加3d呈现
		
		
		6,3D的缩放：transform：scale3d（x，y，z）注意Z轴缩放无效，因为Z轴没有厚度。
		
			（1）transform：scaleX（）
			
			（2）transform：scaleY（）
			
			（3）transform：scaleZ（）





补充部分：
		
		
		
	（1）-webkit-appearance（啊拍啊润次）:none;去除iphone ipad默认按钮的样式